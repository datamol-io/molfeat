[build-system]
requires = ["setuptools", "setuptools-scm"]
build-backend = "setuptools.build_meta"

[project]
name = "molfeat"
description = "molfeat - the hub for all your molecular featurizers"
dynamic = ["version"]
authors = [{ name = "Emmanuel Noutahi", email = "emmanuel.noutahi@hotmail.ca" }]
readme = "README.md"
license = { text = "Apache" }
requires-python = ">=3.9,<3.11"
classifiers = [
    "Development Status :: 5 - Production/Stable",
    "Intended Audience :: Developers",
    "Intended Audience :: Healthcare Industry",
    "Intended Audience :: Science/Research",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
    "Topic :: Scientific/Engineering :: Bio-Informatics",
    "Topic :: Scientific/Engineering :: Information Analysis",
    "Topic :: Scientific/Engineering :: Medical Science Apps.",
    "Natural Language :: English",
    "Operating System :: OS Independent",
    "Programming Language :: Python",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
]

dependencies = [
    "tqdm",
    "loguru",
    "joblib",
    "filelock",
    "fsspec >=2021.9",
    "s3fs >=2021.9",
    "gcsfs >=2021.9",
    "pandas",
    "numpy",
    "scipy",
    "torch>=1.13",
    "datamol >=0.8.0",
    "pyyaml",
    "platformdirs",
    "matplotlib",
    "h5py",
    "pyarrow",
    "pydantic >=2.0.0",
    "platformdirs",
    "scikit-learn",
    "packaging",
    "pmapper",
    "mordredcommunity",
    "python-dotenv",
    "rdkit",
]

[project.optional-dependencies]
dgl = ["dgl>=1.1.1,<=2.0.0", "dgllife>=0.3.2"]

graphormer = ["graphormer-pretrained"]

transformer = ["tokenizers <0.13.2", "transformers", "sentencepiece"]

fcd = ["fcd_torch"]

viz = ["nglview", "ipywidgets"]

pyg = ["torch_geometric >=2.4.0"]

all = [
    "dgl",
    "dgllife",
    "graphormer-pretrained",
    "tokenizers <0.13.2",
    "transformers",
    "fcd_torch",
    "nglview",
    "ipywidgets",
    "torch_geometric >=2.4.0"
]

test = ["pytest >=6.0","pytest-dotenv", "pytest-cov", "pytest-xdist", "black >=22", "ruff"]
docs = ["mkdocs", "mike", "mdx_truly_sane_lists", "mkdocs-material >=7.1.1", "mkdocs-jupyter >=0.24.8", "mkdocstrings", "mkdocstrings-python", "markdown-include"]
dev = ["molfeat[test]", "molfeat[all]", "molfeat[docs]", "pre-commit"]

[project.urls]
Website = "https://molfeat.datamol.io"
"Source Code" = "https://github.com/datamol-io/molfeat"
"Bug Tracker" = "https://github.com/datamol-io/molfeat/issues"
Documentation = "https://molfeat-docs.datamol.io/"

[tool.setuptools]
include-package-data = true
zip-safe = false
license-files = ["LICENSE"]

[tool.setuptools_scm]
fallback_version = "dev"

[tool.setuptools.packages.find]
where = ["."]
include = ["molfeat", "molfeat.*"]
exclude = []
namespaces = true

[tool.setuptools.package-data]
"molfeat.data" = ["**/*"]

[tool.black]
line-length = 100
target-version = ['py39', 'py310']
include = '\.pyi?$'

[tool.ruff]
line-length = 110
target-version = "py310"

[tool.ruff.lint]
ignore = [
    "E501", # Never enforce `E501` (line length violations).
    "E731", # Do not assign a lambda expression, use a def
]

[tool.ruff.lint.per-file-ignores]
"__init__.py" = [
    "F401", # imported but unused
    "E402", # Module level import not at top of file
]

[tool.ruff.lint.pycodestyle]
max-doc-length = 150

[tool.pytest.ini_options]
minversion = "6.0"
addopts = "--verbose --cov-report xml --cov-report term --color yes"
testpaths = ["tests"]
norecursedirs = "tests/helpers"

[tool.coverage.run]
omit = ["setup.py", "tests/*"]

[tool.coverage.xml]
output = "cov.xml"
